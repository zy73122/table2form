{loop $columns $column}
{eval $column_type = $column['column_type']}
{eval $column_en = $column['column_en']}
{eval $column_cn = $column['column_cn']}
{eval $column_default = $column['column_default']}
{eval $column_is_nullable = $column['column_is_nullable']}
{eval $column_elemtype = $column['column_elemtype']}
{eval $column_vin = $column['column_vin']}
{eval $column_vtype = $column['column_vtype']}
{eval $column_vlen = $column['column_vlen']}

<!--#{if $column_is_nullable == 'NO' && $column_default === NULL}-->
{if $column_is_nullable == 'NO'}
{if $column_vin}
    array('{$column_en}','{:implode(',', $column_vin)}',"{$column_cn}不是有效值",self::MUST_VALIDATE,'in'),
{elseif $column_vtype == 'string' && $column_vlen > 0}
    array('{$column_en}','1,{$column_vlen}',"{$column_cn}长度不合法",self::MUST_VALIDATE,'length'),
{elseif $column_vtype == 'int'}
    array('{$column_en}','integer',"{$column_cn}要为整数",self::MUST_VALIDATE,'regex'),
{elseif $column_vtype == 'double'}
    array('{$column_en}','double',"{$column_cn}要为浮点",self::MUST_VALIDATE,'regex'),
{else}
    array('{$column_en}','require',"{$column_cn}不能为空",self::MUST_VALIDATE,'regex'),
{/if}
{/if}

{/loop}